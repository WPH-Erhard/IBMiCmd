**FREE
/include QTEMP/IICRPGSRC,IICCTLOPT

// Part of the IBMiCmd server features
//
// Put command definition in the users IFS Folder in a file named as command.cdml
//
// Uses system API https://www.ibm.com/support/knowledgecenter/ssw_ibm_i_73/apis/qcdrcmdd.htm
//

dcl-ds myPSDS psds;
   currentUser char(10) pos(358); 
end-ds;

dcl-proc main;
    dcl-pi *N;  
        command char(10);    
        library char(10);        
    end-pi;
    
    dcl-ds Data qualified;
        BytesReturned  int(10);
        BytesAvailable int(10);
        CommandSource  varChar(30000);
    end-ds;
    dcl-ds APIError qualified inz;
        BytesProvided  int(10) inz(%size(APIError));
        BytesAvailable int(10) inz;
        ExceptionID    char(7) inz;
        Reserved       char(1) inz(x'00');
        ExceptionData  char(30000) inz;
    end-ds;
    dcl-ds PathName qualified inz;  
        CCSID                       int(10);
        CountryOrRegionID           char(2);
        LanguageID                  char(3);
        *N                          char(3) inz(x'000000');
        PathTypeIndicator           int(10);
        LengthOfPathName            int(10);
        PathNameDelimiterCharacter  char(2);
        *N                          char(10) inz(x'00000000000000000000');
        Path                        char(150);
    end-ds;
    
    dcl-c FORMAT_STREAM_FILE 'DEST0200';
    dcl-c RECEIVER_FORMAT    'CMDD0100';
    dcl-c USE_JOB_CCSID 0;
    dcl-c CHAR_STRING_1_CHAR_DELIMITER 0;
    dcl-c USE_JOB_COUNTRY x'0000';
    dcl-c USE_JOB_LANGUAGE x'000000';
    
    dcl-pr RetreiveCDML extpgm('QCDRCMDD');
        QualifiedCommandName    char(20) const;
        OutputFile              likeds(PathName) const;
        DestinationFormat       char(8) const;
        Data                    likeds(Data);
        ReceiverFormat          char(8) const;
        Error                   likeds(APIError);
    end-pr;
    
    dcl-s delimiter char(1) inz('/'); 
    dcl-s outputFilePath char(150) inz;
    dcl-s qualifiedCommand char(20);
    
    qualifiedCommand = command + library;
       
    outputFilePath = delimiter + 'home' + delimiter + %trimR(currentUser) + delimiter + %trimR(command) + '.cdml';
	
    PathName.CCSID             = USE_JOB_CCSID;
    PathName.CountryOrRegionID = USE_JOB_COUNTRY;
    PathName.LanguageID        = USE_JOB_LANGUAGE;
    PathName.PathTypeIndicator = CHAR_STRING_1_CHAR_DELIMITER;
    PathName.LengthOfPathName  = %len(%trimR(outputFilePath));
    PathName.PathNameDelimiterCharacter = delimiter; 
    PathName.Path              = %trimR(outputFilePath) + x'00';

    callp RetreiveCDML( qualifiedCommand : PathName : FORMAT_STREAM_FILE : Data : RECEIVER_FORMAT : APIError );
     
    return;
    
end-proc;
